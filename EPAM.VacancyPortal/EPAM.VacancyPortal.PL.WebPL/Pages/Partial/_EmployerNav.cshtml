@using EPAM.VacancyPortal.PL.WebPL.Models;

@{ 
    var employer = EmployerRequestHandler.SelectByLogin(User.Identity.Name);
    var responses = EmployeeRequestHandler.SelectAllVacancyResponses().Where(a => a.EmployerId == employer.Id).Count();
}

<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        My Vacancies
    </a>
    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
        <a class="dropdown-item" href="~/Pages/Employer/AddVacancy.cshtml">Add Vacancy</a>
        <a class="dropdown-item" href="~/Pages/Employer/Vacancies.cshtml">Show all vacancies</a>
    </div>
</li>

<li class="nav-item dropdown">
    <a class="nav-link " href="~/Pages/Employer/Responses.cshtml" role="button" aria-haspopup="true" aria-expanded="false">
        Responses
        @if (responses != 0)
        {
            <span class="badge badge-warning">@responses</span>
        }
        else
        {
            <span class="badge badge-warning"></span>
        }
    </a>
</li>

<li class="nav-item">
    <a class="nav-link" href="~/Pages/Employer/AllEmployees.cshtml" role="button" aria-haspopup="true" aria-expanded="false">
        Employee search
    </a>
</li>

<li class="nav-item">
    <a class="nav-link" href="~/Pages/Employer/MyProfile.cshtml" role="button" aria-haspopup="true" aria-expanded="false">
        My profile
    </a>
</li>

<script>
    let responses = parseInt(@responses);
    let newResponses = responses;

    setInterval(function () {
        $.post(
            '/Pages/RequestHandlers/EmployeeRequests.cshtml',
            { type: 'getVacancyResponsesCount', employerId: @employer.Id},
            (data) => { newResponses = parseInt(data);}
        );
        if (newResponses != responses) {
            $('.badge').html(newResponses);
            if (newResponses == 0) {
                $('.badge').html('');
            }
            responses = newResponses;
        }
    }, 1000);
</script>