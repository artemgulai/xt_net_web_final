@using EPAM.VacancyPortal.PL.WebPL.Models;

@{
    var employee = EmployeeRequestHandler.SelectByLogin(User.Identity.Name);
    var responses = VacancyRequestHandler.SelectAllEmployeeResponses().Where(a => a.EmployeeId == employee.Id).Count();
}

<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        My Skills
    </a>
    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
        <a class="dropdown-item" href="~/Pages/Employee/AddSkill.cshtml">Add skill</a>
        <a class="dropdown-item" href="~/Pages/Employee/Skills.cshtml">Show all skills</a>
    </div>
</li>

<li class="nav-item dropdown">
    <a class="nav-link " href="~/Pages/Employee/Responses.cshtml" role="button" aria-haspopup="true" aria-expanded="false">
        Responses
        @if (responses != 0)
        {
            <span class="badge badge-warning">@responses</span>
        }
        else
        {
            <span class="badge badge-warning"></span>
        }
    </a>
</li>

<li class="nav-item dropdown">
    <a class="nav-link" href="~/Pages/Employee/AllVacancies.cshtml" role="button" aria-haspopup="true" aria-expanded="false">
        Vacancy search
    </a>
</li>

<li class="nav-item">
    <a class="nav-link" href="~/Pages/Employee/MyProfile.cshtml" role="button" aria-haspopup="true" aria-expanded="false">
        My profile
    </a>
</li>

<script>
    let responses = parseInt(@responses);
    let newResponses = responses;

    setInterval(function () {
        $.post(
            '/Pages/RequestHandlers/VacancyRequests.cshtml',
            { type: 'getEmployeeResponsesCount', employeeId: @employee.Id},
            (data) => { newResponses = parseInt(data);}
        );
        if (newResponses != responses) {
            $('.badge').html(newResponses);
            if (newResponses == 0) {
                $('.badge').html('');
            }
            responses = newResponses;
        }
    }, 1000);
</script>