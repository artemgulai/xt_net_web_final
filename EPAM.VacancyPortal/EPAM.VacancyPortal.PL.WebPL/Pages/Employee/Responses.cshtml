@if (!User.IsInRole("EMPLOYEE"))
{
    Response.Redirect("~/Pages/Forbidden.cshtml");
    return;
}

@using EPAM.VacancyPortal.PL.WebPL.Models;

@{
    Page.Title = "Responses";
    Layout = "~/Layouts/_MainLayout.cshtml";
}

@{
    var employee = EmployeeRequestHandler.SelectByLogin(User.Identity.Name);
    var employers = EmployerRequestHandler.SelectAll();
    var vacancies = new List<EPAM.VacancyPortal.Entities.Vacancy>();
    foreach (var employer in employers)
    {
        vacancies.AddRange(employer.Vacancies);
    }

    var responses = VacancyRequestHandler.SelectAllEmployeeResponses().Where(a => a.EmployeeId == employee.Id);
}

@foreach (var response in responses)
{
    <div class="mt-2 w-50 mr-auto ml-auto">
        <ul class="list-group">
            <li class="list-group-item">
                @{
                    var vacancy = vacancies.First(a => a.Id == response.VacancyId);
                }

                <p>@vacancy.Name</p>
                <p>@vacancy.Description</p>
                <p>Employer: @vacancy.Employer.Name, @vacancy.Employer.City</p>
                <p>Salary: @vacancy.Salary</p>
                <p>
                    @if (vacancy.Remote)
                    {
                        @:Remote work is possible
                    }
                    else
                    {
                        @:Remote work is not possible
                    }
                </p>


                <input type="hidden" class="employeeId" value="@employee.Id" />
                <input type="hidden" class="vacancyId" value="@vacancy.Id" />
                <input type="hidden" class="responseId" value="@response.Id" />
                <button class="btn btn-primary accept-button">Accept</button> <button class="btn btn-danger decline-button">Decline</button>
            </li>
        </ul>
    </div>
}

<script src="~/Scripts/jquery-3.0.0.js"></script>
<script>
    $('.accept-button').click(accept);

    function accept() {
        let button = $(this);
        let parent = $(this).parent();
        let vacancyId = parent.children('.vacancyId').val();
        let employeeId = parent.children('.employeeId').val();
        let responseId = parent.children('.responseId').val();

        let fd = new FormData();
        fd.append('type', 'acceptVacancy');
        fd.append('employeeId', employeeId);
        fd.append('vacancyId', vacancyId);
        fd.append('responseId', responseId);

        $.ajax({
            url: '/Pages/RequestHandlers/HiringRequests.cshtml',
            type: 'POST',
            data: fd,
            processData: false,
            contentType: false,
            success: (data) => {
                let result = JSON.parse(data);
                let message = $('<div></div>');
                message.text(result.Message);
                if (result.Result == "Error") {
                    message.addClass('alert alert-danger');
                } else {
                    message.addClass('alert alert-info');
                }
                button.remove();
                parent.children('.decline-button').remove();
                parent.append(message);
                removeResponses(employeeId, vacancyId);
            },
            error: () => {
                location.href = "/Pages/ErrorPage.cshtml";
            }
        });
    }

    function removeResponses(employeeId, vacancyId) {
        $('.list-group-item').each(function (i) {
            if ($(this).children('.employeeId').val() == employeeId ?
                !($(this).children('.vacancyId').val() == vacancyId)
                : $(this).children('.vacancyId').val() == vacancyId) {
                $(this).remove();
            }
        });
    }

    $('.decline-button').click(function () {
        let button = $(this);
        let parent = $(this).parent();
        let responseId = parent.children('.responseId').val();

        let fd = new FormData();
        fd.append('type', 'declineVacancy');
        fd.append('responseId', responseId);

        $.ajax({
            url: '/Pages/RequestHandlers/HiringRequests.cshtml',
            type: 'POST',
            data: fd,
            processData: false,
            contentType: false,
            success: (data) => {
                let result = JSON.parse(data);
                let message = $('<div></div>');
                message.text(result.Message);
                if (result.Result == "Error") {
                    message.addClass('alert alert-danger');
                } else {
                    message.addClass('alert alert-info');
                }
                button.remove();
                parent.children('.accept-button').remove();
                parent.append(message);
            },
            error: () => {
                location.href = "/Pages/ErrorPage.cshtml";
            }
        });
    });
</script>